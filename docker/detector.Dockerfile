FROM nvidia/cuda:11.1-base-ubuntu18.04

ARG KAFKA_BOOTSTRAP_SERVERS
ARG KAFKA_DETECTOR_TOPIC
ARG KAFKA_DETECTOR_CONSUMER_GROUP
ARG KEYDB_HOST
ARG KEYDB_PORT
ARG KEYDB_PASSWORD
ARG KEYDB_CACHE_DB
ARG KEYDB_REGISTER_DB
ARG KEYDB_DONE_SESSION_DB
ARG KAFKA_EMBEDDER_TOPIC
ARG KEYDB_REGISTER_BUFFER
ARG KAFKA_REGISTER_RESPONSE_TOPIC
ARG KEYDB_KEY_TTL
ARG COMPUTE_ENGINE_BACKEND

ENV KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
ENV KAFKA_DETECTOR_TOPIC=${KAFKA_DETECTOR_TOPIC}
ENV KAFKA_DETECTOR_CONSUMER_GROUP=${KAFKA_DETECTOR_CONSUMER_GROUP}
ENV KEYDB_HOST=${KEYDB_HOST}
ENV KEYDB_PORT=${KEYDB_PORT}
ENV KEYDB_PASSWORD=${KEYDB_PASSWORD}
ENV KEYDB_CACHE_DB=${KEYDB_CACHE_DB}
ENV KEYDB_REGISTER_DB=${KEYDB_REGISTER_DB}
ENV KEYDB_DONE_SESSION_DB=${KEYDB_DONE_SESSION_DB}
ENV KAFKA_EMBEDDER_TOPIC=${KAFKA_EMBEDDER_TOPIC}
ENV KEYDB_REGISTER_BUFFER=${KEYDB_REGISTER_BUFFER}
ENV KAFKA_REGISTER_RESPONSE_TOPIC=${KAFKA_REGISTER_RESPONSE_TOPIC}
ENV KEYDB_KEY_TTL=${KEYDB_KEY_TTL}
ENV COMPUTE_ENGINE_BACKEND=${COMPUTE_ENGINE_BACKEND}

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update && apt-get install -y \
	tk-dev apt-utils python3-pip tzdata locales

# create alias
RUN cd /usr/bin \
  && ln -sf python3 python \
  && ln -sf pip3 pip

ENV LANG C.UTF-8

RUN locale-gen en_US.UTF-8

# set locale
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV TZ=Asia/Ho_Chi_Minh

RUN apt-get update && apt-get install -y --no-install-recommends

RUN pip install torch==1.5.1 torchvision==0.6.1 opencv-python==4.2.0.34

RUN pip install grpcio==1.22.0 grpcio-tools==1.22.0

ADD ./docker/requirements/detector.rs requirements.txt

RUN pip install -r requirements.txt

RUN pip install scikit-build cmake

RUN pip install confluent-kafka==1.5.0

RUN pip install dpsutil==1.3.10

COPY . /app

ENV PYTHONPATH=/app
